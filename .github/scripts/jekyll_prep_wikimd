#!/bin/bash
set -e

# Environment variables must be set first:
# export GITHUB_USER=UserName
# export GITHUB_TOKEN=$SECRET_PAT
# export GITHUB_REPOSITORY=RepoOwner/RepoName

# Set variables
reltiv_dir="$(dirname "${0}")"
cd ${reltiv_dir}/../../
FROM_WIKI="TO_WIKI"

# If updating wiki with src docs
[ $# -gt 0 ] && FROM_WIKI="${1}"
if [ "${FROM_WIKI}" = "TO_WIKI" ]; then
  echo "Overwritting Wiki with src/"
  src_docs="$(find src/ -type f -name "*.md")"

  mkdir -p public/ && rm -rf public/
  git clone "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.wiki.git" public/
  cd public/ && git fetch --all && git pull --rebase origin master && cd ../

  for sd in ${src_docs}; do
    [ "$(head -n 1 "${sd}")" = "---" ] && \
      echo "Stripping Headers from \"${sd}\" and Moving into Wiki Repo (public/)" && \
      printf "%s\n" "$(tail -n +7 "${sd}")" > "${sd}"
    cp -f "${sd}" "public/"
  done

  cp -rf src/img/ public/

  push_auth="$(git log -1 --pretty=format:'%an')"
  auth_email="$(git log -1 --pretty=format:'%ae')"
  wiki_commit="Auto Update via $(git log -1 --pretty=format:'%h')"

  echo "$PWD" && ls -alh && cd public/
  git config --local user.name "${push_auth}"
  git config --local user.email "${auth_email}"
  echo "$PWD" && ls -alh &&git status
  touch .blank.md && git add . && git commit -sm "$wiki_commit"
  rm .blank.md && git add . && git commit -sm "$wiki_commit"
  git push
  echo "$PWD" && ls -alh && git status
  cd ../

  # Clean up
  rm -rf public/

  # Auto-Prepends Liquid Header to all Markdown files
  page_docs="$(find src/ -type f -name "*.md")"
  for pd in ${page_docs}; do
    title="$(basename "${pd}" .md)"
    if [ "$(basename "${pd}" .md)" != "Home" ]; then # Ignore Wiki's "Home"
      if [ "$(head -n 1 "${pd}")" != "---" ]; then # Only prepend docs missing headers
        echo "Prepending Liquid Header to ${pd}"
        sed -i "1s;^;---\nlayout: default\ntitle: ${title}\npermalink: /src/${title}.html\n---\n\n;" "${pd}"
      fi
    fi
  done

  exit 0

# If updating gh-pages with wiki edits
elif [ "${FROM_WIKI}" = "FROM" ]; then
  echo "Overwriting src/ with Wiki Docs"

  mkdir -p public/ && rm -rf public/

  # Clone Wiki and get files
  git clone "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.wiki.git" public/
  wiki_docs="$(find public/ -type f -name "*.md")"

  # Copy any updated files note already in src dir (Not Home.md though) 
  for md in ${wiki_docs}; do
    title="$(basename "${md}" .md)"
    if [ "$(basename "${md}" .md)" != "Home" ]; then
      echo "copying ${md} to src/"
      sed -i "1s;^;---\nlayout: default\ntitle: ${title}\npermalink: /src/${title}.html\n---\n\n;" "${md}"
      cp -f "${md}" "src/"
    fi
  done

  # Clean up
  rm -rf public/

  exit 0
fi
